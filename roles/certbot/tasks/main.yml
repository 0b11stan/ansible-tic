- name: create required docker volumes
  become: true
  command: "docker volume create {{ item }}"
  args:
    creates: "{{ docker_volumes_path }}/{{ item }}"
  loop:
    - nextcloud
    - database
    - letsencrypt-config
    - letsencrypt-var
    - letsencrypt-data
    - letsencrypt-log
    - letsencrypt-dh

- name: list started containers
  become: true
  command: docker ps -q
  register: started_docker_ctrs
  check_mode: false
  changed_when: false

- name: every other containers are stopped
  become: true
  command: "docker stop {{ started_docker_ctrs.stdout }}"
  when: started_docker_ctrs.stdout != ""

- name: stat certificates
  become: true
  stat:
    path: "{{ docker_volumes_path }}/letsencrypt-config/_data/live"
  register: certificates

- name: nginx conf exists on remote host
  become: true
  copy:
    src: nginx.conf
    dest: /tmp/nginx.conf
    owner: root
    group: root
    mode: 0400
  when: not certificates.stat.exists
  changed_when: false

- name: 
  become: true
  docker_compose:
    project_name: letsencrypt-tmp-website
    definition:
      version: '3.7'
      volumes:
        letsencrypt-data:
          external: true
      services:
        letsencrypt-tmp-website:
          container_name: letsencrypt-tmp-website
          image: nginx:latest
          ports:
            - "80:80"
          volumes:
            - /tmp/nginx.conf:/etc/nginx/conf.d/default.conf
            - letsencrypt-data:/usr/share/nginx/html
  when: not certificates.stat.exists
  register: letsencrypt_tmp_website

- name: a letsencrypt certificate has been delivered
  become: true
  docker_container:
    name: certbot
    image: certbot/certbot
    auto_remove: true
    volumes:
      - letsencrypt-config:/etc/letsencrypt
      - letsencrypt-var:/var/lib/letsencrypt
      - letsencrypt-data:/data/letsencrypt
      - letsencrypt-log:/var/log/letsencrypt
    command:
      - certonly 
      - --webroot
      - --email
      - tristan@tic.sh
      - --agree-tos
      - --no-eff-email
      - --webroot-path=/data/letsencrypt
      - -d
      - flexfactory.fr
      - -d
      - www.flexfactory.fr
      - -d
      - cloud.tic.sh
  when: not certificates.stat.exists

- name: temporary http server has been stopped
  become: true
  docker_container:
    name: letsencrypt-tmp-website
    state: stopped

- name: générate openssl certificate
  become: true
  openssl_dhparam:
    path: "{{ docker_volumes_path }}/letsencrypt-dh/_data/dhparam-2048.pem"
    size: 2048
